<?php

namespace common\models;

use common\helpers\WechatSendTmp;
use Yii;

/**
 * This is the model class for table "appoint_hpv".
 *
 * @property int $id
 * @property string $name 预约人姓名
 * @property int $phone 预约人联系电话
 * @property string $date 接种日期
 * @property int $state 状态
 * @property int $cratettime 创建时间
 * @property int $userid 用户ID
 * @property int $doctorid 预约社区
 * @property int $vid 预约疫苗
 */
class AppointHpv extends \yii\db\ActiveRecord
{
    public static $stateText = [0 => '审核中', 1 => '已通过', 2 => '未通过'];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'appoint_hpv';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'phone', 'userid', 'doctorid', 'vid', 'img','idcard','address'], 'required'],
            [['phone', 'state', 'cratettime', 'userid', 'doctorid', 'vid'], 'integer'],
            [['date', 'img'], 'safe'],
            [['name'], 'string', 'max' => 50],
            [['idcard'], 'common\helpers\IdcardValidator'],
            [['phone'], 'validatePhone'],

        ];
    }
    public function validatePhone($attribute, $params){
        preg_match('/^1[3456789]\d{9}$/', $this->phone, $arr);
        if(!$arr){
            $this->addError($attribute, '请输入正确手机号码！');
        }
    }
    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => '预约人姓名',
            'phone' => '预约人联系电话',
            'idcard' => '预约人身份证号',
            'address' => '预约人现住址',
            'date' => '接种日期',
            'state' => '状态',
            'cratettime' => '创建时间',
            'userid' => '用户ID',
            'doctorid' => '预约社区',
            'vid' => '预约疫苗',
            'img' => '所属辖区的本人居委会证明'
        ];
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->cratettime = time();
            $this->state = 0;
            $this->date = 0;
        } else {
            if (($this->date < '1990-01-01' || !$this->date) && $this->state == 1) {

                $aw = AppointHpvSetting::find()
                    ->where(['doctorid' =>$this->doctorid])
                    ->one();
                if(!$aw) {
                    $this->addError('date','自动分配失败！您没有设置号源');
                    return false;
                }
                $startDate=date('Y-m-d');

                while ($startDate) {
                    $d = strtotime( '+1 day',strtotime($startDate));
                    $startDate=date('Y-m-d',$d);
                    //判断周末
                    $w=date('w',$d);
                    if($w==6 || $w==0){
                        continue;
                    }
                    //判断法定假日
                    if(!in_array($startDate, HospitalAppoint::$holiday)){
                        $week = date('w', $d);
                        $key = 'week' . $week;
                        $weekCount = $aw->$key;
                        if ($weekCount>0) {
                            $endDayCount = AppointHpv::find()->where(['doctorid' => $this->doctorid])
                                ->andWhere(['state' => 1])
                                ->andWhere(['date' => $d])
                                ->count();
                            if($weekCount>$endDayCount) {
                                $this->date = $startDate;
                                break;
                            }
                        }
                    }
                }
            }
            if($this->date && $this->state==1){

                $hospital = UserDoctor::findOne(['userid'=>$this->doctorid])->hospital;
                $data = [
                    'first' => ['value' => ''],
                    'keyword1' => array('value' => $hospital->name.'HPV疫苗'),
                    'keyword2' => array('value' => $this->name),
                    'keyword3' => array('value' => $this->phone),
                    'keyword4' => array('value' => date('Y-m-d',strtotime($this->date))),
                    'keyword5' => array('value' => '1：30-4：00'),
                    'remark' => array('value' => "尊敬的用户您好，您的预约已生效，请您按照预约时间前往社区，如有问题请联系在线客服"),
                ];
                $tmpid = '83CpoxWB9JCnwdXPr0H7dB66QQnFdJQvBbeMnJ9rdHo';
            }
            $login = UserLogin::findOne(['userid' => $this->userid]);
            $rs = WechatSendTmp::send($data, $login->openid, $tmpid);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
