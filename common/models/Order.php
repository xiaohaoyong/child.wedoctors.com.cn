<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "order".
 * 订单主表
 * @property int $id
 * @property int $orderid
 * @property int $createtime
 * @property int $type
 * @property int $pay_method
 * @property double $total
 * @property int $userid
 * @property int $pay_time
 * @property int $status
 * @property double $orig
 */
class Order extends \yii\db\ActiveRecord
{
    public static $statusText=[
        0=>'未支付',
        1=>'已支付未提问',
        2=>'已支付已提问未回复',
        3=>'已支付已提问已回复',
        4=>'已完成',
        -1=>'已超时',
        -2=>'退款中',
        -3=>'已退款',
    ];
    public static $msgText=[
        0=>'未支付',
        1=>'未提问',
        2=>'咨询中',
        3=>'咨询中',
        4=>'查看记录',
        -1=>'已超时',
        -2=>'退款中',
        -3=>'已退款'
    ];
    public static $typeText=[
        1=>'团队',
        2=>'专家',
        3=>'vip服务卡'
    ];
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'order';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['orderid', 'createtime', 'type', 'pay_method', 'userid', 'pay_time','status'], 'integer'],
            [['total', 'orig'], 'number'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'orderid' => '订单号',
            'createtime' => '创建时间',
            'type' => '订单类型',
            'pay_method' => '支付方式',
            'total' => '总额',
            'userid' => '购买用户',
            'pay_time' => '支付时间',
            'status'=>'订单状态',
            'orig' => 'Orig',
        ];
    }
    public function beforeSave($insert)
    {
        if($insert){
            $this->createtime=time();
            $this->orderid=$this->orderid();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     *
     * 生成订单
     * @param $userid
     * @param $type
     * @param $total
     * @param array $goods
     * @param array $discount
     * @return int
     */
    public static function createOrder($userid,$type,$goods,$discount=[]){

        if($discount) {
            //获取优惠总金额
            $discount_money = yii\helpers\ArrayHelper::getColumn($discount, 'money');
            $discount_money_count = array_sum($discount_money);
        }else{
            $discount_money_count=0;
        }


        //创建订单
        $order = new Order();
        $order->userid=$userid;
        $order->type=$type;


        $total=$goods['goods_price']-$discount_money_count;
        $order->total=$total>=0?$total:0; //计算订单金额
        $order->orig=$goods['goods_price'];
        if($order->save()){
            //保存订单商品
            $orderGoods=new OrderGoods();
            $orderGoods->orderid=$order->id;
            $orderGoods->type=$type;
            if($goods){
                $orderGoods->goodsid=$goods['id'];
                $orderGoods->goods_price=$goods['goods_price'];
            }
            $orderGoods->save();
            if($discount) {
                //保存优惠方式
                $orderDiscount = new OrderDiscount();
                $orderDiscount->orderid=$order->id;
                foreach($discount as $k=>$v){
                    $orderDiscount->type=$v['type'];
                    $orderDiscount->money=$v['money'];
                }
            }
            return $order->orderid;
        }else{
            var_dump($order->firstErrors);exit;
        }
        return 0;
    }
    private function orderid()
    {
        return strtotime(date('YmdHis')) . substr(microtime(), 2, 6) . sprintf('%03d', rand(0, 999));
    }
}
