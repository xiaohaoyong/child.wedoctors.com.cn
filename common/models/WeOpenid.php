<?php

namespace common\models;

use common\components\HttpRequest;
use common\vendor\MpWechat;
use Yii;

/**
 * This is the model class for table "{{%we_openid}}".
 *
 * @property int $id
 * @property string $openid 微信唯一键
 * @property int $createtime 扫码时间
 * @property int $doctorid 医生ID
 * @property string $unionid
 * @property string $xopenid
 */
class WeOpenid extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%we_openid}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['createtime', 'doctorid'], 'integer'],
            [['openid'], 'string', 'max' => 50],
            [['unionid'], 'string', 'max' => 50],
            [['xopenid'], 'string', 'max' => 50],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'openid' => '微信唯一键',
            'createtime' => '扫码时间',
            'doctorid' => '医生ID',
        ];
    }
    public function beforeSave($insert)
    {
        if(!$this->unionid) {
            $mpWechat = new MpWechat([
                'token' => \Yii::$app->params['WeToken'],
                'appId' => \Yii::$app->params['AppID'],
                'appSecret' => \Yii::$app->params['AppSecret'],
                'encodingAesKey' => \Yii::$app->params['encodingAesKey']
            ]);
            $access_token = $mpWechat->getAccessToken();

            if ($access_token) {

                $path = '/cgi-bin/user/info?access_token=' . $access_token . "&openid=" . $this->openid . "&lang=zh_CN";
                $curl = new HttpRequest(\Yii::$app->params['wxUrl'] . $path, true, 2);
                $userJson = $curl->get();
                $userInfo = json_decode($userJson, true);
                if ($userInfo['unionid']) {
                    $this->unionid = $userInfo['unionid'];
                }else{
                    $this->unionid=$userJson;
                }
            }
        }
        if(!$this->createtime)
        {
            $this->createtime=time();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function action($xml){
        if($xml['Event'] == 'subscribe' || $xml['Event'] == 'SCAN')
        {
            $openid = $xml['FromUserName'];
            $doctor_id = str_replace('qrscene_', '', $xml['EventKey']);
            $doctor_id=$doctor_id?$doctor_id:0;

            $weOpenid=WeOpenid::findOne(['openid'=>$openid]);
            $weOpenid = $weOpenid ? $weOpenid : new WeOpenid();
            if(!$weOpenid->doctorid)
            {
                $weOpenid->openid=$openid;
                $weOpenid->doctorid=$doctor_id;
                $weOpenid->save();
            }
            return $weOpenid;
        }
        return new \stdClass();
    }
}
