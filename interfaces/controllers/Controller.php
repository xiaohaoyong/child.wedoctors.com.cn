<?php
/**
 * 全局控制器
 * User: wangzhen
 * Date: 2017/12/6
 * Time: 下午2:05
 */

namespace interfaces\controllers;


use common\components\Code;
use common\models\Autograph;
use common\models\ChildInfo;
use common\models\DoctorParent;
use common\models\Pregnancy;
use common\models\User;
use common\models\UserDoctor;
use common\models\UserInfo;
use common\models\UserLogin;
use yii\base\ActionEvent;
use yii\helpers\ArrayHelper;
use yii\web\Response;

class Controller extends \yii\web\Controller
{
    private $result=[];
    public $key="zE($6p6T4rdn";

    public function beforeAction($action)
    {
        \Yii::$app->response->format=Response::FORMAT_JSON;
        $params=\Yii::$app->request->post()+\Yii::$app->request->get();
        $sign=$params['sign'];

        if($sign) {
            unset($params['sign']);
            ksort($params);
            $str = implode('', $params);
            if (md5($str . date('Ymd') . $this->key) !== $sign) {
                \Yii::$app->response->data = ['code' => 30001, 'msg' => '数字签证错误'];
                return false;
            }
        }else{
            \Yii::$app->response->data = ['code' => 30001, 'msg' => '未授权访问'];
            return false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


    public function afterAction($action, $result)
    {
        $return = parent::afterAction($action, $result); // TODO: Change the autogenerated

        $return=$this->return_array_filter($return);
        if($result instanceof Code && $result->getCode())
        {
            return $result->getCode();
        }

        $this->result=Code::result();
        if (!isset($return['data']) && $return) {
            $this->result['data'] = $return;
        }elseif (is_array($return)) {
            if($return) {
                foreach ($return as $k => $v) {
                    if ($k == 'data' || $k == 'msg' || $k == 'code') {
                        $this->result[$k] = $v;
                    } else {
                        $this->result['data'][$k] = $v;
                    }
                }
            }else{
                $this->result['data'] = [];
            }
        } else {
            if (!isset($this->result['data'])) unset($this->result['data']);
        }
        return $this->result;
    }

    private function return_array_filter($return)
    {
        if(!is_array($return)) return $return;
        $data=[];
        foreach($return as $k=>$v)
        {
            if(is_array($v))
            {
                $row=$this->return_array_filter($v);
            }else{
                $row= $v===null?"":$v;
            }
            $data[$k]=$row;
        }
        return $data;
    }

}